{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { MongoClient } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList'; // const DUMMY_MEETUPS = [\n//     {\n//         id: 'm1',\n//         title: 'A First Meetup',\n//         image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//         address: 'Some address 5, 12345 Some City',\n//         description: 'This is a first meetup!',\n//     },\n//     {\n//         id: 'm2',\n//         title: 'A Second Meetup',\n//         image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//         address: 'Some address 10, 12345 Some City',\n//         description: 'This is a second meetup!',\n//     },\n// ];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"List of meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    }), \";\"]\n  });\n} // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     //fetch data from an API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//     };\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://huy:oOZ1lvcBt49zkUMP@cluster0.fgnj6.mongodb.net/meetups?retryWrites=true&w=majority', {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  console.log(meetups);\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10 //regenerate the page each 10 second (when deployed)\n\n  };\n}\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}