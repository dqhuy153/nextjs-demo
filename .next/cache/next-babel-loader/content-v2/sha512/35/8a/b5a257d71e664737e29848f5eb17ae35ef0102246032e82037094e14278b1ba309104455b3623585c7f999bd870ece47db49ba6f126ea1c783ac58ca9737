{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qhuy/Desktop/dev/test/react/14.nexjs-project/pages/index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList'; // const DUMMY_MEETUPS = [\n//     {\n//         id: 'm1',\n//         title: 'A First Meetup',\n//         image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//         address: 'Some address 5, 12345 Some City',\n//         description: 'This is a first meetup!',\n//     },\n//     {\n//         id: 'm2',\n//         title: 'A Second Meetup',\n//         image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//         address: 'Some address 10, 12345 Some City',\n//         description: 'This is a second meetup!',\n//     },\n// ];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n} // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     //fetch data from an API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//     };\n// }\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/qhuy/Desktop/dev/test/react/14.nexjs-project/pages/index.js"],"names":["Fragment","Head","MeetupList","HomePage","props","meetups"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAnBSF,Q;;AAkDT,eAAeA,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\n\n// const DUMMY_MEETUPS = [\n//     {\n//         id: 'm1',\n//         title: 'A First Meetup',\n//         image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//         address: 'Some address 5, 12345 Some City',\n//         description: 'This is a first meetup!',\n//     },\n//     {\n//         id: 'm2',\n//         title: 'A Second Meetup',\n//         image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//         address: 'Some address 10, 12345 Some City',\n//         description: 'This is a second meetup!',\n//     },\n// ];\n\nfunction HomePage(props) {\n    return (\n        <Fragment>\n            <Head></Head>\n            <MeetupList meetups={props.meetups} />;\n        </Fragment>\n    );\n}\n\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n\n//     //fetch data from an API\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         },\n//     };\n// }\n\nexport async function getStaticProps() {\n    // fetch data from an API\n\n    const client = await MongoClient.connect(\n        'mongodb+srv://huy:oOZ1lvcBt49zkUMP@cluster0.fgnj6.mongodb.net/meetups?retryWrites=true&w=majority',\n        { useNewUrlParser: true, useUnifiedTopology: true }\n    );\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find().toArray();\n\n    console.log(meetups);\n\n    return {\n        props: {\n            meetups: meetups.map((meetup) => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString(),\n            })),\n        },\n        revalidate: 10, //regenerate the page each 10 second (when deployed)\n    };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}