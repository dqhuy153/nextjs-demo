{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/qhuy/Desktop/dev/test/react/14.nexjs-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"A First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://huy:oOZ1lvcBt49zkUMP@cluster0.fgnj6.mongodb.net/meetups?retryWrites=true&w=majority', {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    //false will support only meetupId list in paths, true will try to fetch all meetupId\n    paths: meetups.map(item => ({\n      params: {\n        meetupId: item._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      id: meetupId,\n      image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n      title: 'A First Meetup',\n      address: 'Some Street 5, Some City',\n      description: 'The meetup description'\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/qhuy/Desktop/dev/test/react/14.nexjs-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","useNewUrlParser","useUnifiedTopology","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","item","params","meetupId","toString","getStaticProps","context","props","id","image","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,wHADV;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACjB,mGADiB,EAEjB;AAAEC,IAAAA,eAAe,EAAE,IAAnB;AAAyBC,IAAAA,kBAAkB,EAAE;AAA7C,GAFiB,CAArB;AAKA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AACc;AACjBC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,IAAD,KAAW;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,IAAI,CAACL,GAAL,CAASQ,QAAT;AADN;AADkB,KAAX,CAAZ;AAFJ,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,SAAO;AACHI,IAAAA,KAAK,EAAE;AACHC,MAAAA,EAAE,EAAEL,QADD;AAEHM,MAAAA,KAAK,EAAE,wHAFJ;AAGHC,MAAAA,KAAK,EAAE,gBAHJ;AAIHC,MAAAA,OAAO,EAAE,0BAJN;AAKHC,MAAAA,WAAW,EAAE;AALV;AADJ,GAAP;AASH;AAED,eAAe3B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails() {\n    return (\n        <MeetupDetail\n            image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n            title=\"A First Meetup\"\n            address=\"Some Street 5, Some City\"\n            description=\"The meetup description\"\n        />\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n        'mongodb+srv://huy:oOZ1lvcBt49zkUMP@cluster0.fgnj6.mongodb.net/meetups?retryWrites=true&w=majority',\n        { useNewUrlParser: true, useUnifiedTopology: true }\n    );\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n    return {\n        fallback: false, //false will support only meetupId list in paths, true will try to fetch all meetupId\n        paths: meetups.map((item) => ({\n            params: {\n                meetupId: item._id.toString(),\n            },\n        })),\n    };\n}\n\nexport async function getStaticProps(context) {\n    //fetch data for a single meetup\n    const meetupId = context.params.meetupId;\n\n    return {\n        props: {\n            id: meetupId,\n            image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n            title: 'A First Meetup',\n            address: 'Some Street 5, Some City',\n            description: 'The meetup description',\n        },\n    };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}